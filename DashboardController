'use strict';

var App = angular
    .module('App')
    .factory('DashboardServices', Services);

Services.$inject = ['$http', '$httpParamSerializerJQLike', '$localStorage', '$rootScope','serviceBasePath','toastr'];

function Services($http, $httpParamSerializerJQLike, $localStorage, $rootScope, serviceBasePath,toastr) {

    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } };
    var config_post = { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } };
        $http.defaults.headers.common.Authorization = 'Bearer ' + $localStorage.token;

    var Services = {
        Get: {
            TranstagList: function (model,callback) {
                // console.log($httpParamSerializerJQLike(model))
                $http.get(serviceBasePath + 'api/Dashboard/GetTransTag?'+ $httpParamSerializerJQLike(model),{}, config)
                .then(function (response) {
                    callback({ success: true, data: response.data });
                },
                function (response) {
                    toastr.error(response.data);
                    callback({ success: false });
                })
            },
            Consumptionlist: function (model,callback) {
                // console.log($httpParamSerializerJQLike(model))
                $http.get(serviceBasePath +  'api/Dashboard/GetConsumptions?'+ $httpParamSerializerJQLike(model),{}, config)
                .then(function (response) {
                    callback({ success: true, data: response.data });
                },
                function (response) {
                    toastr.error(response.data);
                    callback({ success: false });
                })
            },
            Dashboard: function (model,callback) {
                $http.get(serviceBasePath + 'api/Dashboard/GetDashboard?' + $httpParamSerializerJQLike(model),{}, config)
                .then(function (response) {
                    callback({ success: true, data: response.data });
                },
                function (response) {
                    toastr.error(response.data);
                    callback({ success: false });
                })
            },

            Export: function (model) {
                window.open(serviceBasePath + 'api/Dashboard/Export?' + $httpParamSerializerJQLike(model), '_blank');
            },
        },

        Post: {
          
        },
        Put: {
            Stype: function (callback) {
                $http.put(serviceBasePath + 'api/Dashboard/PutStype', {}, config_post)
                .then(function (response) {
                    callback({ success: true });
                },
                function (response) {
                    toastr.error(response.data, { timeOut: 3000 });
                    swal.clickCancel();
                    callback({ success: false });
                })
            }
        },
        
        Delete: {
            DeleteItem: function (callback) {
            
            }
        },
            
    };

    return Services;
}
